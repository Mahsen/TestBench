//*********************************************************** Explanation ***************************************************************//
/*
Last Update : 1400/10/26
Programmer : Mohammad Lotfi
Site : http://www.mahsen.ir
Tel : +989124662703
Email : info@mahsen.ir
*/
//************************************************************* Warning *****************************************************************//
/*
none
*/
//************************************************************* Wizard ******************************************************************//
#include "Wizards.cpp"
//************************************************************ defineds ******************************************************************//
/*
none
*/
//************************************************************ includes ******************************************************************//
#include "TaskManager.hpp"
//************************************************************ variables *****************************************************************//
unsigned char TASKMANAGER_Added = 0;
//************************************************************* opjects ******************************************************************//
/*
none
*/
//************************************************************ functions *****************************************************************//
/**
 * @brief 	پيکره بندي اوليه اين ماژول
*/
/**
 * \image html 2014-12-22_15-58-08.png
*/
void __init_TaskManager(void)
{

}
//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
void __ASM AsmJumpTo(U32 Address) 
{
//			MOV LR, #0xFFFFFFFF    ;Reset Link Register
//			LDR SP, [R0, #0]       ;Load new stack pointer address
//			LDR PC, [R0, #4]       ;Load new program counter address
}
//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
void TASKMANAGER_JumpTo(U32 Address)
{
//			__disable_irq();
//			SCB->VTOR = Address;
//			__enable_irq();

//			AsmJumpTo(Address);
}
//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
/**
 * @brief 	اضافه کردن تابع وظيفه در اين ماژول 
 * @param[in]	Name         نام منحصر به فرد براي تابع وظيفه
 * @param[in]	Task         تابع وظيفه اي که مي خواهيم در اين ماژول اضافه گردد
 * @param[in]	Priority     اولويت تابع وظيفه
 * @param[in]	Stack        پشته لازم براي تابع وظيفه
 * @param[in]	Stack_Size   سايز پشته براي تابع وظيفه
 * @return 	تعداد توابع وظيفه اضافه شده در اين ماژول
*/
signed char TASKMANAGER_Add(const char* Name, void (*Task)(void const *argument), int Priority, unsigned int Stack_Size)
{
	if(TASKMANAGER_Added >= TASK_MANAGER_MAX_MANAGER)
	{
		//Debug("TASKMANAGER: Full Taks");
		return TASK_MANAGER_OUTOFRANG;
	}
	
	///
	//{
	osThreadDef_t osThread_t;
	
	osThread_t.pthread = Task;
	osThread_t.tpriority = (osPriority)Priority;
	osThread_t.instances = 1;
	osThread_t.stacksize = Stack_Size;
	//}
	
	osThreadId ID[2];
	ID[0] = osThreadCreate (&osThread_t, NULL);

	TASKMANAGER_Added++;
	
	return TASKMANAGER_Added;
}
//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
/**
 * @brief 	ايجاد تاخير زماني
 * @param[in]	Ticks         مقدار تاخير زماني بر اساس تيک سيستم عامل
*/
void TASKMANAGER_Delay(U32 Ticks)
{
	volatile U32 TimeDivision = (Ticks / (1 Sec));
	volatile U32 TimeRemaining = (Ticks % (1 Sec));

	for(int Time = 0; Time<TimeDivision;Time++)
	{
		osDelay(1 Sec);
	}
	
	if(TimeRemaining)
	{
		osDelay(TimeRemaining);
	}
}
//*************************************************************** tasks *******************************************************************//
/*
none
*/
//************************************************************** vectors ******************************************************************//
/*
none
*/
//****************************************************************************************************************************************//










